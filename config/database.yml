# MySQL. Versions 5.1.10 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem 'mysql2'
#
# And be sure to use new-style password hashing:
#   http://dev.mysql.com/doc/refman/5.7/en/old-client.html
#
default: &default
  adapter: mysql2
  encoding: utf8
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: <%= ENV.fetch("MYSQL_ROOT_PASSWORD"){ %x(  docker-compose exec db env | grep MYSQL_ROOT_PASSWORD | cut -d'=' -f2)} %>
  password: <%= ENV.fetch("MYSQL_ROOT_PASSWORD"){%x(  docker-compose exec db env | grep MYSQL_ROOT_PASSWORD | cut -d'=' -f2) } %>

development:
  <<: *default
  database: <%= ENV.fetch("MYSQL_DATABASE"){%x( docker-compose exec db env | grep MYSQL_DATABASE | cut -d'=' -f2)} %>
  host: <%= ENV.fetch("RAILS_DB_MYSQL_HOST"){ %x( docker-compose port db 3306).match("(.*):")[1] } %>
  port: <%= ENV.fetch("RAILS_DB_MYSQL_PORT"){ %x( docker-compose port db 3306).match(":([0-9]+)")[1] } %>

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: <%= ENV.fetch("MYSQL_DATABASE"){%x( docker-compose exec test_db env | grep MYSQL_DATABASE | cut -d'=' -f2)} %>
  host: <%= ENV.fetch("RAILS_DB_MYSQL_HOST"){ %x( docker-compose port test_db 3306).match("(.*):")[1] } %>
  port: <%= ENV.fetch("RAILS_DB_MYSQL_PORT"){ %x( docker-compose port test_db 3306).match(":([0-9]+)")[1]}%>

# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: RunnersBikers_production
  username: RunnersBikers
  password: <%= ENV['RUNNERSBIKERS_DATABASE_PASSWORD'] %>
